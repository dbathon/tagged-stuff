// Generated by CoffeeScript 1.6.1
(function() {
  var module;

  module = angular.module('taggedStuff.controllers', []);

  module.controller('SearchCtrl', [
    '$scope', 'searchService', function(s, searchService) {
      s.data = {
        searchString: ''
      };
      s.search = function() {
        return searchService.search(s.data.searchString);
      };
      s.searchAll = function() {
        return searchService.search(null);
      };
      return searchService.addListener(s, function(searchString) {
        return s.data.searchString = searchString;
      });
    }
  ]);

  module.controller('TagsCtrl', [
    '$scope', 'tagService', 'searchService', function(s, tagService, searchService) {
      var updateTags;
      s.data = {
        searchString: null
      };
      updateTags = function() {
        return s.tags = tagService.query({
          orderBy: 'id'
        });
      };
      s.searchForTag = function(tag) {
        return searchService.search('+' + tag.id);
      };
      return updateTags();
    }
  ]);

  module.controller('EntriesCtrl', [
    '$scope', 'entryService', 'searchService', function(s, entryService, searchService) {
      var selectedIndex, updateEntries;
      s.data = {
        searchString: null
      };
      selectedIndex = null;
      updateEntries = function() {
        selectedIndex = null;
        return s.entries = entryService.query({
          orderBy: '-createdTs',
          query: s.data.searchString
        });
      };
      s.entriesTitle = function() {
        if (s.data.searchString) {
          return 'Search result for "' + s.data.searchString + '"';
        } else {
          return 'All entries';
        }
      };
      s.isSelected = function(entry) {
        return entry === s.entries[selectedIndex];
      };
      s.isExpanded = function(entry) {
        return s.isSelected(entry);
      };
      s.select = function(entry) {
        var index;
        index = s.entries.indexOf(entry);
        return selectedIndex = index >= 0 ? index : null;
      };
      s.joinedTags = function(entry) {
        var tag;
        return ((function() {
          var _i, _len, _ref, _results;
          _ref = entry.tags;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            tag = _ref[_i];
            _results.push(tag.id);
          }
          return _results;
        })()).sort().join(' ');
      };
      searchService.addListener(s, function(searchString) {
        s.data.searchString = searchString && searchString.length > 0 ? searchString : null;
        return updateEntries();
      });
      return updateEntries();
    }
  ]);

}).call(this);
